#pragma once

#include "stdafx.h"
// this class contains OpenGL material parameters.
// all parameters are public.
class Material
{
public:
    const char *Name;
    GLdouble Ambient[4];
    GLdouble Diffuse[4];
    GLdouble Specular[4];
    GLdouble Shininess[1];
    GLdouble Emission[4];
public:
    // build in materials, from http://devernay.free.fr/cours/opengl/materials.html
    static Material GetMaterial(const char *name)
    {
        static const  Material BuildInMaterial[]= {
            { "emerald", 0.0215, 0.1745, 0.0215, 1.0, 0.07568, 0.61424, 0.07568, 1.0, 0.633, 0.727811, 0.633, 1.0, 0.6, 0.0, 0.0, 0.0, 0.0 },
            { "jade", 0.135, 0.2225, 0.1575, 1.0, 0.54, 0.89, 0.63, 1.0, 0.316228, 0.316228, 0.316228, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0 },
            { "obsidian", 0.05375, 0.05, 0.06625, 1.0, 0.18275, 0.17, 0.22525, 1.0, 0.332741, 0.328634, 0.346435, 1.0, 0.3, 0.0, 0.0, 0.0, 0.0 },
            { "pearl", 0.25, 0.20725, 0.20725, 1.0, 1, 0.829, 0.829, 1.0, 0.296648, 0.296648, 0.296648, 1.0, 0.088, 0.0, 0.0, 0.0, 0.0 },
            { "ruby", 0.1745, 0.01175, 0.01175, 1.0, 0.61424, 0.04136, 0.04136, 1.0, 0.727811, 0.626959, 0.626959, 1.0, 0.6, 0.0, 0.0, 0.0, 0.0 },
            { "turquoise", 0.1, 0.18725, 0.1745, 1.0, 0.396, 0.74151, 0.69102, 1.0, 0.297254, 0.30829, 0.306678, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0 },
            { "brass", 0.329412, 0.223529, 0.027451, 1.0, 0.780392, 0.568627, 0.113725, 1.0, 0.992157, 0.941176, 0.807843, 1.0, 0.21794872, 0.0, 0.0, 0.0, 0.0 },
            { "bronze", 0.2125, 0.1275, 0.054, 1.0, 0.714, 0.4284, 0.18144, 1.0, 0.393548, 0.271906, 0.166721, 1.0, 0.2, 0.0, 0.0, 0.0, 0.0 },
            { "chrome", 0.25, 0.25, 0.25, 1.0, 0.4, 0.4, 0.4, 1.0, 0.774597, 0.774597, 0.774597, 1.0, 0.6, 0.0, 0.0, 0.0, 0.0 },
            { "copper", 0.19125, 0.0735, 0.0225, 1.0, 0.7038, 0.27048, 0.0828, 1.0, 0.256777, 0.137622, 0.086014, 1.0, 0.1, 0.0, 0.0, 0.0, 0.0 },
            { "gold", 0.24725, 0.1995, 0.0745, 1.0, 0.75164, 0.60648, 0.22648, 1.0, 0.628281, 0.555802, 0.366065, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0 },
            { "silver", 0.19225, 0.19225, 0.19225, 1.0, 0.50754, 0.50754, 0.50754, 1.0, 0.508273, 0.508273, 0.508273, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0 },
            { "black plastic", 0.0, 0.0, 0.0, 1.0, 0.01, 0.01, 0.01, 1.0, 0.50, 0.50, 0.50, 1.0, .25, 0.0, 0.0, 0.0, 0.0 },
            { "cyan plastic", 0.0, 0.1, 0.06, 1.0, 0.0, 0.50980392, 0.50980392, 1.0, 0.50196078, 0.50196078, 0.50196078, 1.0, .25, 0.0, 0.0, 0.0, 0.0 },
            { "green plastic", 0.0, 0.0, 0.0, 1.0, 0.1, 0.35, 0.1, 1.0, 0.45, 0.55, 0.45, 1.0, .25, 0.0, 0.0, 0.0, 0.0 },
            { "red plastic", 0.0, 0.0, 0.0, 1.0, 0.5, 0.0, 0.0, 1.0, 0.7, 0.6, 0.6, 1.0, .25, 0.0, 0.0, 0.0, 0.0 },
            { "white plastic", 0.0, 0.0, 0.0, 1.0, 0.55, 0.55, 0.55, 1.0, 0.70, 0.70, 0.70, 1.0, .25, 0.0, 0.0, 0.0, 0.0 },
            { "yellow plastic", 0.0, 0.0, 0.0, 1.0, 0.5, 0.5, 0.0, 1.0, 0.60, 0.60, 0.50, 1.0, .25, 0.0, 0.0, 0.0, 0.0 },
            { "black rubber", 0.02, 0.02, 0.02, 1.0, 0.01, 0.01, 0.01, 1.0, 0.4, 0.4, 0.4, 1.0, .078125, 0.0, 0.0, 0.0, 0.0 },
            { "cyan rubber", 0.0, 0.05, 0.05, 1.0, 0.4, 0.5, 0.5, 1.0, 0.04, 0.7, 0.7, 1.0, .078125, 0.0, 0.0, 0.0, 0.0 },
            { "green rubber", 0.0, 0.05, 0.0, 1.0, 0.4, 0.5, 0.4, 1.0, 0.04, 0.7, 0.04, 1.0, .078125, 0.0, 0.0, 0.0, 0.0 },
            { "red rubber", 0.05, 0.0, 0.0, 1.0, 0.5, 0.4, 0.4, 1.0, 0.7, 0.04, 0.04, 1.0, .078125, 0.0, 0.0, 0.0, 0.0 },
            { "white rubber", 0.05, 0.05, 0.05, 1.0, 0.5, 0.5, 0.5, 1.0, 0.7, 0.7, 0.7, 1.0, .078125, 0.0, 0.0, 0.0, 0.0 },
            { "yellow rubber", 0.05, 0.05, 0.0, 1.0, 0.5, 0.5, 0.4, 1.0, 0.7, 0.7, 0.04, 1.0, .078125, 0.0, 0.0, 0.0, 0.0 }
        };

        for (int i = 0; i < sizeof(BuildInMaterial) / sizeof(BuildInMaterial[0]); ++i)
        {
            if (strcmp(BuildInMaterial[i].Name, name) == 0)
                return BuildInMaterial[i];
        }
        return BuildInMaterial[0];

    }
};